services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: myapp_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # This keeps your database data even when containers are removed
    restart: unless-stopped

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: myapp_backend
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DEBUG}
    depends_on:
      - mysql
    volumes:
      # This mounts your local backend code into the container
      # So changes you make locally are reflected immediately
      - ./backend:/app
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: myapp_frontend
    ports:
      - "3000:5173"
    volumes:
      # Mount local frontend code for hot reload
      - ./frontend:/app
      # Prevent node_modules from being overwritten
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true # For hot reload on Windows
    restart: unless-stopped

volumes:
  mysql_data:
